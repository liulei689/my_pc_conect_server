<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--上下文菜单样式-->
    <Style  TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="White"/>
        <!--<Setter Property="BorderBrush" Value="{DynamicResource FluentBorderBrush}"/>-->

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border Margin="{Binding ElementName=Border,Path=Margin}" Background="{Binding ElementName=Border,Path=Background}" CornerRadius="{Binding ElementName=Border,Path=CornerRadius}">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Direction="0"  BlurRadius="10" Opacity=".1" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="Border"
                                Background="{DynamicResource PopupBackgroundBrush}"
                                BorderBrush="{DynamicResource ContextBorderBrush}"
                                BorderThickness="1"
                                Padding="5"
                                Margin="10"
                                CornerRadius="8"
                                >
                            <!--<Border.Effect>
                            <DropShadowEffect ShadowDepth="0" Direction="0"  BlurRadius="0" Opacity="0" />
                        </Border.Effect>-->
                            <ScrollViewer Focusable="false" Padding="0">

                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Menu}"
       TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Background"
          Value="Transparent" />
        <Setter Property="BorderThickness"
          Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">

                        <StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region MenuItem-->

    <!--分割线-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height"
          Value="1" />
        <Setter Property="Margin"
          Value="45,5,15,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <!--<Border BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="#FFDEDEDE"/>
                        </Border.BorderBrush>
                    </Border>-->
                    <Rectangle Fill="{DynamicResource SeparatorBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader 顶部一级菜单栏 -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Padding="0" Background="Transparent">
            <Grid>
                <ContentPresenter Margin="10,4"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade"
                       ScrollViewer.VerticalScrollBarVisibility="Hidden">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                                Background="White"
                                BorderBrush="#2b20d9"
                                Margin="10"
                                CornerRadius="0"
                               
                >
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="11" Opacity="0.2" Direction="218" RenderingBias="Quality" ShadowDepth="1"/>
                        </Border.Effect>

                        <ScrollViewer CanContentScroll="True"
                       >
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                <Setter Property="Background"
              TargetName="Border" Value="{DynamicResource HoverBackgroundBrush}">

                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <!--<Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />-->
                <!--<Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,20" />-->
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground" Value="#ccc">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border" Value="red">

                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground" Value="#ccc">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
         Background="{DynamicResource PopupBackgroundBrush}"
                    CornerRadius="5"
                    MinWidth="150"
                    Padding="0,6">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="Icon"
                        
                        VerticalAlignment="Center"
                                      TextElement.Foreground="{DynamicResource DefaultTextBrush}"
                                      HorizontalAlignment="Center"
                        ContentSource="Icon" />
                <Rectangle x:Name="CheckMark"
                           Grid.Column="1"
                           Fill="{DynamicResource ThemeBrush}"
                           Width="5"
                           Height="5"
                               RadiusX="5"
                               RadiusY="5"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Visibility="Hidden"
                           SnapsToDevicePixels="True"/>
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="2"
                        ContentSource="Header"
                                      Margin="0,0,10,0"
                    VerticalAlignment="Center"  
HorizontalAlignment="Left"                                      RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="3"
                               FontWeight="Normal"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="0"
                              
                 DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
            <!--<Trigger Property="Icon"
             Value="{x:Null}">
                    <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
                </Trigger>-->
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>

            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border" Value="{DynamicResource HoverBackgroundBrush}">

                </Setter>
                <!--<Setter Property="BorderBrush"
              TargetName="Border">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource BorderMediumColor}"
                          Offset="0" />
                                <GradientStop Color="Transparent"
                          Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>-->
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground" Value="#ccc">

                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--二级菜单样式-->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="0"
                MinWidth="150"
                    Padding="0,6"
                Background="{DynamicResource PopupBackgroundBrush}"
                    CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="Auto" />

                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <Rectangle x:Name="CheckMark"
                           Grid.Column="1"
                           Fill="{DynamicResource ThemeBrush}"
                           Width="5"
                           Height="5"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Visibility="Hidden"
                           SnapsToDevicePixels="True"/>
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="2"
                        ContentSource="Header"
                        RecognizesAccessKey="True" 
                                  Margin="0,0,0,0"/>
                <!--<TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="0"
                               FontWeight="Normal"
                 DockPanel.Dock="Right" />-->
                <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z"
                      Margin="10,0,0,0">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource ThemeColor}" />
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="0"
                           VerticalOffset="-5"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                    <Grid>
                        <Border Margin="13" Background="{DynamicResource PopupBackgroundBrush}" CornerRadius="5">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0" Direction="0"  BlurRadius="15" Opacity=".3" />
                            </Border.Effect>
                        </Border>
                        <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="{DynamicResource PopupBackgroundBrush}"
                                CornerRadius="5"
                BorderThickness="1"
                                BorderBrush="{DynamicResource ContextBorderBrush}"
                                
                                Margin="10">

                            <ScrollViewer CanContentScroll="True"
                       >
                                <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" Margin="5"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>

                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border" Value="{DynamicResource HoverBackgroundBrush}">
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground" Value="#ccc">
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">

        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Foreground" Value="{DynamicResource DefaultTextBrush}"/>
        <Style.Triggers>
            <Trigger Property="Role"
             Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
            </Trigger>
            <Trigger Property="Role"
             Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--滚动条样式-->
    <Style x:Key="ScrollBarThumb"  
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle  
                            x:Name="Bar"
                            Fill="{DynamicResource ScrollBarBrush}"  
                            RadiusX="4"  
                            RadiusY="4"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bar" Property="Fill" Value="{DynamicResource ThemeBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarPageButton"  
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Focusable"  
                Value="false"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Opacity"  
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
                               Width="{TemplateBinding Width}"  
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="VerticalScrollBarPageButton"  
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"  
                Value="true"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Focusable"  
                Value="false"/>
        <Setter Property="IsTabStop"  
                Value="false"/>
        <Setter Property="Opacity"  
                Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"  
                               Width="{TemplateBinding Width}"  
                               Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style 
           TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Stylus.IsPressAndHoldEnabled"  
                Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled"  
                Value="false"/>
        <Setter Property="Background"  
                Value="Transparent"/>
        <Setter Property="Margin"  
                Value="0,0,0,0"/>
        <Setter Property="Width"  
                Value="8"/>
        <Setter Property="MinWidth"  
                Value="2"/>
        <Setter Property="Opacity"  
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track"  
                               IsEnabled="{TemplateBinding IsMouseOver}"  
                               IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton  
                                    Style="{StaticResource VerticalScrollBarPageButton}"  
                                    Command="{x:Static ScrollBar.PageUpCommand}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton  
                                    Style="{StaticResource VerticalScrollBarPageButton}"  
                                    Command="{x:Static ScrollBar.PageDownCommand}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumb}"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation"  
                     Value="Horizontal">
                <Setter Property="Background"  
                        Value="Transparent"/>
                <Setter Property="Margin"  
                        Value="1,0,6,1"/>
                <Setter Property="Height"  
                        Value="5"/>
                <Setter Property="MinHeight"  
                        Value="5"/>
                <Setter Property="Width"  
                        Value="Auto"/>
                <Setter Property="Opacity"  
                        Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Track x:Name="PART_Track"  
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
                                                      Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"  
                                                      Command="{x:Static ScrollBar.PageRightCommand}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumb}"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ScrollViewer -->
    <Style  
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"  
                                Padding="{TemplateBinding Padding}"
                                >
                        <Grid Background="{TemplateBinding Background}">
                            <!--ScrollViewer左侧内容模版,对它没什么特别的操作,默认就可以-->
                            <!--<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                        CanContentScroll="{TemplateBinding CanContentScroll}"
                                        CanHorizontallyScroll="False"
                                        CanVerticallyScroll="True"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        Grid.Column="0"
                                        Margin="{TemplateBinding Padding}"
                                        Grid.Row="0" />-->

                            <ScrollContentPresenter  
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                Cursor="{TemplateBinding Cursor}"  
                                Margin="{TemplateBinding Padding}"  
                                     Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"  
                                       HorizontalAlignment="Right"  
                                       Margin="0,0,3,0"
                                       Maximum="{TemplateBinding ScrollableHeight}"  
                                       Opacity="0"
                                       Width="2"
                                       Orientation="Vertical"  
                                      ScrollViewer.IsDeferredScrollingEnabled="True"
                                       ViewportSize="{TemplateBinding ViewportHeight}"  
                                       Value="{TemplateBinding VerticalOffset}"  
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"  
                                       Maximum="{TemplateBinding ScrollableWidth}"  
                                       Orientation="Horizontal"  
                                     ScrollViewer.IsDeferredScrollingEnabled="True"
                                       VerticalAlignment="Bottom"  
                                       Value="{TemplateBinding HorizontalOffset}"  
                                       ViewportSize="{TemplateBinding ViewportWidth}"  
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="1"  
                                        Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Opacity"  
                                        To="0"  
                                        Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_VerticalScrollBar" Property="Opacity" Value="1" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_VerticalScrollBar" Property="Opacity" Value="0" />

                        </Trigger>-->
                        <EventTrigger RoutedEvent="MouseEnter"  
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Width"  
                                        To="8"  
                                        Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave"  
                                      SourceName="PART_VerticalScrollBar">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                                        Storyboard.TargetName="PART_VerticalScrollBar"  
                                        Storyboard.TargetProperty="Width"  
                                        To="2"  
                                        Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>