<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:UI.Controls.Navigation"
                    xmlns:base="clr-namespace:UI.Controls.Base">
    <Style TargetType="{x:Type local:NavigationItem}">
        <Setter Property="SnapsToDevicePixels"
          Value="true" />
        <Setter Property="Width" Value="60"/>
        <!--<Setter Property="MinHeight" Value="44"/>-->
        <Setter Property="Height" Value="60"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:NavigationItem}">
                    <Border Background="Transparent" CornerRadius="10" x:Name="Border">

                        <!--<Border.Background>
                            <SolidColorBrush Color="{TemplateBinding Background}" Opacity="1"/>
                        </Border.Background>-->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <!--<VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.15" />
                                    <VisualTransition GeneratedDuration="0"
                                  To="Pressed" />
                                </VisualStateGroup.Transitions>-->
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                Storyboard.TargetName="Border"
                >
                                            <ColorAnimationUsingKeyFrames.KeyFrames>
                                                <LinearColorKeyFrame Value="{DynamicResource HoverBackgroundColor}" KeyTime="0:0:0" />
                                            </ColorAnimationUsingKeyFrames.KeyFrames>
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">

                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <!--<Rectangle x:Name="Line" Height="1" Width="auto" Fill="{DynamicResource SubBorderBrush}" Visibility="Collapsed" Margin="20,0"/>-->
                        <Grid x:Name="Content"  Margin="5">
                            <!--<Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="25"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="44"/>
                                </Grid.ColumnDefinitions>-->
                            <!--<Rectangle x:Name="CheckMark" Width="2" Fill="{TemplateBinding IconColorBrush}" Visibility="Hidden" Margin="0,10"/>-->
                            <!--<StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">-->
                            <!--图标-->
                            <base:Icon x:Name="Icon" IconType="{TemplateBinding Icon}" Foreground="{Binding ElementName=Title,Path=Foreground}" VerticalAlignment="Center" Grid.Column="1" FontSize="17" RenderTransformOrigin="0.5,0.5">
                                <base:Icon.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform X="0" Y="-5"/>


                                    </TransformGroup>
                                    <!--中心点<TranslateTransform X="0" Y="0"/>-->
                                </base:Icon.RenderTransform>
                            </base:Icon>
                            <!--<base:Icon HorizontalAlignment="Center" IconType="{TemplateBinding Icon}" Foreground="Red"  Grid.Column="1" FontSize="20" RenderTransformOrigin="0,0">
                                   
                                </base:Icon>-->
                            <!--标题-->
                            <TextBlock x:Name="Title" RenderOptions.EdgeMode="Aliased" Text="{TemplateBinding Title}" Grid.Column="2" VerticalAlignment="Bottom" HorizontalAlignment="Center"  FontSize="10" Foreground="{DynamicResource NavUnselectedTextBrush}" Margin="0,5,0,0"/>
                            <!--</StackPanel>-->
                            <!--徽标-->
                            <!--<TextBlock Text="{TemplateBinding BadgeText}" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,20,0"/>-->

                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Title" Value="{x:Null}">
                            <Setter Property="Height" Value="15"/>

                            <!--<Setter Property="Visibility" TargetName="Line" Value="Visible"/>-->
                            <Setter Property="Visibility" TargetName="Content" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <!--<Setter Property="Background" Value="White"/>-->
                            <Setter TargetName="Title" Property="Foreground" Value="{DynamicResource ThemeBrush}"/>
                            <Setter TargetName="Title" Property="Visibility" Value="Collapsed"/>

                            <!--<Setter Property="Visibility" TargetName="CheckMark" Value="Visible"/>-->
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<ColorAnimation Duration="0:0:0.3"
                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border" To="{DynamicResource NavSelectedColor}" />-->
                                        <DoubleAnimation Duration="0:0:0.5"
                    Storyboard.TargetProperty="(base:Icon.RenderTransform).Children[0].(TranslateTransform.Y)" Storyboard.TargetName="Icon" To="0" >
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseIn"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <!--<ColorAnimation Duration="0:0:0.3"
                    Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Border" To="#00ffffff" />-->
                                        <DoubleAnimation Duration="0:0:0.25"
                    Storyboard.TargetProperty="(base:Icon.RenderTransform).Children[0].(TranslateTransform.Y)" Storyboard.TargetName="Icon" To="-5" >
                                            <DoubleAnimation.EasingFunction>
                                                <BackEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>

                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource NavSelectedBrush}"/>
                            <Setter TargetName="Icon" Property="IconType" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:NavigationItem}}, Path=SelectedIcon}"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>